<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProFileDownloader</name>
    </assembly>
    <members>
        <member name="T:ProFileDownloader.NetowrkFile.FileDownloader">
            <summary>
            A class which represents a file downloader
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileDownloader.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize the downloader.
            </summary>
            <param name="url">Url of the remote file.</param>
            <param name="directoryPath">Where the local file should be saved at.</param>
            <param name="suggestedName">Giving a name and extension to overwrite the remote suggested file name.</param>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileDownloader.SizeInReadableFormat">
            <summary>
            Giving you a readable format for the remote file size.
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileDownloader.IsRemoteServerSupportFileSegmentaion">
            <summary>
            Indicates if the remote server supports the file segmentation or not
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileDownloader.IsRemoteServerSupportResuming">
            <summary>
            Indicates if the remote server supports the file resuming or not
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileDownloader.LoadRemoteFilePropertiesAsync">
            <summary>
            Loads the downloader with the required information about the remote file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileDownloader.UpdateRemoteFilePropertiesForResumingAsync">
            <summary>
            Updates the downloader with the new changes that happened to the remote file, to match the least changes to be able to resume downloading the file.
            </summary>
            <returns>
            Updates the remote file properties.
            </returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileDownloader.DownloadFile(System.Action{ProFileDownloader.Utilities.DownloadInfo},System.Threading.CancellationToken)">
            <summary>
            Download the remote file.
            </summary>
            <param name="CurrentProgress">Gets the current downloading process</param>
            <param name="cancellationToken">A token to cancel the downloading process if you want.</param>
            <returns></returns>
        </member>
        <member name="T:ProFileDownloader.NetowrkFile.FileSegmentaionManager">
            <summary>
            A class which represents segments downloader
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileSegmentaionManager.SegmentDownloaders">
            <summary>
            Represent the segments, which are downloadable.
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileSegmentaionManager.SizeInReadableFormat">
            <summary>
            Giving you a readable format for the remote file size.
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileSegmentaionManager.IsRemoteServerSupportFileSegmentaion">
            <summary>
            Indicates if the remote server supports the file segmentation or not
            </summary>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileSegmentaionManager.IsRemoteServerSupportResuming">
            <summary>
            Indicates if the remote server supports the file resuming or not
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileSegmentaionManager.LoadRemoteFilePropertiesAsync">
            <summary>
            Loads the downloader with the required information about the remote file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileSegmentaionManager.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initialize the segment downloader manager.
            </summary>
            <param name="url">The file url</param>
            <param name="directoryPath">where you want to store your file</param>
            <param name="segmentNumbers">How many segments</param>
            <param name="suggestedName">the file name and its extension</param>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileSegmentaionManager.GenerateSegmentsAsync">
            <summary>
            It fills SegmentDownloads Property with the segments.
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileSegmentaionManager.UpdateGeneratedSegmentsForResuimgAsync(System.String)">
            <summary>
            Update the segments info, to carry on where they left.
            </summary>
            <param name="JsonContent">The application stored (BasicSegmentsInfo) json value, which has some basic info about the segments.</param>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileSegmentaionManager.ReconstructSegmentsAsync">
            <summary>
            Reconstract the segments from the temp files that got created.
            </summary>
            <returns>A complete file in the directory that you specified in the constructor.</returns>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.FileSegmentaionManager.BasicSegmentsInfo">
            <summary>
            A JSON content, which has some basic info to make the application can resotre the segments incase of any connection lose
            </summary>
        </member>
        <member name="T:ProFileDownloader.NetowrkFile.FileTransfer">
            <summary>
            A class which represents a file transfer between two nodes.
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileTransfer.ConnectSenderAsync">
            <summary>
            Used to connect to the server as a sender
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileTransfer.ConnectReceiverAsync">
            <summary>
            Used to connect to the server as a receiver
            </summary>
            <returns>A connection id to be shared with the sender, so the sender can only transfer the data to a specific user</returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileTransfer.SendStreamingAsync(System.String,System.String)">
            <summary>
            Start Streaming the data as a sender to the server.
            </summary>
            <param name="fileName">The path of the file, that you want to transfer</param>
            <param name="userID">The connection id, that the recevier shared with the sender</param>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.FileTransfer.ReceiveStreamingAsync(System.String)">
            <summary>
            Start Receving the streamed data from the server, then it is automatically close the connection.
            </summary>
            <param name="fileName">The path which you want to store the streamed data into.</param>
            <returns></returns>
        </member>
        <member name="T:ProFileDownloader.NetowrkFile.SegmentDownloader">
            <summary>
            A class which represents a file downloader
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.SegmentDownloader.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialize the downloader.
            </summary>
            <param name="url">Url of the remote file.</param>
            <param name="start">Start Segment's Position</param>
            <param name="end">End Segment's Position</param>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.SegmentDownloader.#ctor(System.String,ProFileDownloader.Utilities.ServerSegment)">
            <summary>
            Initialize the downloader.
            </summary>
            <param name="url">Url of the remote file.</param>
            <param name="serverSegment">Load the Segment info</param>
        </member>
        <member name="P:ProFileDownloader.NetowrkFile.SegmentDownloader.SizeInReadableFormat">
            <summary>
            Giving you a readable format for the remote file size.
            </summary>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.SegmentDownloader.LoadSegmentPropertiesAsync">
            <summary>
            Loads the downloader with the required information about the remote file.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.SegmentDownloader.UpdateSegmentPropertiesForResumingAsync">
            <summary>
            Updates the downloader with the new changes that happened to the remote file, to match the least changes to be able to resume downloading the file.
            </summary>
            <returns>
            Updates the remote file properties.
            </returns>
        </member>
        <member name="M:ProFileDownloader.NetowrkFile.SegmentDownloader.DownloadSegment(System.Action{ProFileDownloader.Utilities.DownloadInfo},System.Threading.CancellationToken)">
            <summary>
            Download the remote file.
            </summary>
            <param name="CurrentProgress">Gets the current downloading process</param>
            <param name="cancellationToken">A token to cancel the downloading process if you want.</param>
            <returns></returns>
        </member>
        <member name="T:ProFileDownloader.Utilities.FileUtilities">
            <summary>
            Provides Utility Methods for dealing with files.
            </summary>
        </member>
        <member name="T:ProFileDownloader.Utilities.ServerSegment">
            <summary>
            
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.ServerSegment.Start">
            <summary>
            Segment's Start position
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.ServerSegment.End">
            <summary>
            Segment's End position
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.ServerSegment.Size">
            <summary>
            Segment's Size
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.ServerSegment.TotalReadBytes">
            <summary>
            Total bytes that have been read until now
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.ServerSegment.LocalTempFileLocation">
            <summary>
            Temp file location
            </summary>
        </member>
        <member name="T:ProFileDownloader.Utilities.DownloadInfo">
            <summary>
            Represents an instance info for the current downloading file.
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.DownloadInfo.CurrentPercentage">
            <summary>
            Current Percentage of the current ongoing downloading file
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.DownloadInfo.DownloadSpeed">
            <summary>
            Current downloading speed of the current ongoing file
            </summary>
        </member>
        <member name="P:ProFileDownloader.Utilities.DownloadInfo.DownloadedProgress">
            <summary>
            Current Progress of how much has been downloaded of the ongoing file.
            </summary>
        </member>
    </members>
</doc>
